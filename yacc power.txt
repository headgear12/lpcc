(E)11.Write a program to evaluate a given built-in functions using YACC specification.
INPUT
p= pow(3,2) / log (24)
=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.l file

%{
#include "y.tab.h"
%}

%%

"+"     { return ADD; }
"-"     { return SUB; }
"*"     { return MUL; }
"/"     { return DIV; }
"("     { return LPAREN; }
")"     { return RPAREN; }
[0-9]+  { yylval = atoi(yytext); return NUM; }
[ \t\n] { /* ignore whitespace */ }
.       { return yytext[0]; }

%%

int yywrap() { return 1; }
-------------------------------------
.y file 

%{
#include <stdio.h>
#include <math.h>
int yylex();
void yyerror(const char *);

%}

%token NUM
%token ADD SUB MUL DIV LPAREN RPAREN

%%

input: /* empty */
     | input expr '\n' { printf("Result: %d\n", $2); }
     ;

expr: NUM
    | expr ADD expr  { $$ = $1 + $3; }
    | expr SUB expr  { $$ = $1 - $3; }
    | expr MUL expr  { $$ = $1 * $3; }
    | expr DIV expr  { $$ = $1 / $3; }
    | LPAREN expr RPAREN { $$ = $2; }
    ;

%%

void yyerror(const char *s) {
    fprintf(stderr, "%s\n", s);
}

int main() {
    yyparse();
    return 0;
}

------------------------------
commands

lex calculator.l
yacc -d calculator.y
gcc lex.yy.c y.tab.c -o calculator -lm
./calculator
Then you can input expressions like 2 + 3, 4 * (5 - 2), etc., and it will evaluate them and print the result.